#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CuttingMrpBackFlushWPF.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CuttingMrp")]
	public partial class ProductFinishDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertMPS(MPS instance);
    partial void UpdateMPS(MPS instance);
    partial void DeleteMPS(MPS instance);
    partial void InsertProductFinish(ProductFinish instance);
    partial void UpdateProductFinish(ProductFinish instance);
    partial void DeleteProductFinish(ProductFinish instance);
    partial void InsertPart(Part instance);
    partial void UpdatePart(Part instance);
    partial void DeletePart(Part instance);
    #endregion
		
		public ProductFinishDataContext() : 
				base(global::CuttingMrpBackFlushWPF.Properties.Settings.Default.CuttingMrpConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProductFinishDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProductFinishDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProductFinishDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProductFinishDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MPS> MPS
		{
			get
			{
				return this.GetTable<MPS>();
			}
		}
		
		public System.Data.Linq.Table<ProductFinish> ProductFinish
		{
			get
			{
				return this.GetTable<ProductFinish>();
			}
		}
		
		public System.Data.Linq.Table<Part> Part
		{
			get
			{
				return this.GetTable<Part>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MPS")]
	public partial class MPS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _partnr;
		
		private System.DateTime _orderedDate;
		
		private System.DateTime _requiredDate;
		
		private double _quantity;
		
		private string _source;
		
		private string _sourceDoc;
		
		private int _status;
		
		private string _unitId;
		
		private EntityRef<MPS> _MPS2;
		
		private EntityRef<MPS> _MPS1;
		
		private EntityRef<Part> _Part;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpartnrChanging(string value);
    partial void OnpartnrChanged();
    partial void OnorderedDateChanging(System.DateTime value);
    partial void OnorderedDateChanged();
    partial void OnrequiredDateChanging(System.DateTime value);
    partial void OnrequiredDateChanged();
    partial void OnquantityChanging(double value);
    partial void OnquantityChanged();
    partial void OnsourceChanging(string value);
    partial void OnsourceChanged();
    partial void OnsourceDocChanging(string value);
    partial void OnsourceDocChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnunitIdChanging(string value);
    partial void OnunitIdChanged();
    #endregion
		
		public MPS()
		{
			this._MPS2 = default(EntityRef<MPS>);
			this._MPS1 = default(EntityRef<MPS>);
			this._Part = default(EntityRef<Part>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._MPS1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partnr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string partnr
		{
			get
			{
				return this._partnr;
			}
			set
			{
				if ((this._partnr != value))
				{
					if (this._Part.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartnrChanging(value);
					this.SendPropertyChanging();
					this._partnr = value;
					this.SendPropertyChanged("partnr");
					this.OnpartnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderedDate", DbType="DateTime NOT NULL")]
		public System.DateTime orderedDate
		{
			get
			{
				return this._orderedDate;
			}
			set
			{
				if ((this._orderedDate != value))
				{
					this.OnorderedDateChanging(value);
					this.SendPropertyChanging();
					this._orderedDate = value;
					this.SendPropertyChanged("orderedDate");
					this.OnorderedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requiredDate", DbType="DateTime NOT NULL")]
		public System.DateTime requiredDate
		{
			get
			{
				return this._requiredDate;
			}
			set
			{
				if ((this._requiredDate != value))
				{
					this.OnrequiredDateChanging(value);
					this.SendPropertyChanging();
					this._requiredDate = value;
					this.SendPropertyChanged("requiredDate");
					this.OnrequiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Float NOT NULL")]
		public double quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sourceDoc", DbType="VarChar(200)")]
		public string sourceDoc
		{
			get
			{
				return this._sourceDoc;
			}
			set
			{
				if ((this._sourceDoc != value))
				{
					this.OnsourceDocChanging(value);
					this.SendPropertyChanging();
					this._sourceDoc = value;
					this.SendPropertyChanged("sourceDoc");
					this.OnsourceDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitId", DbType="VarChar(50)")]
		public string unitId
		{
			get
			{
				return this._unitId;
			}
			set
			{
				if ((this._unitId != value))
				{
					this.OnunitIdChanging(value);
					this.SendPropertyChanging();
					this._unitId = value;
					this.SendPropertyChanged("unitId");
					this.OnunitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MPS_MPS", Storage="_MPS2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public MPS MPS2
		{
			get
			{
				return this._MPS2.Entity;
			}
			set
			{
				MPS previousValue = this._MPS2.Entity;
				if (((previousValue != value) 
							|| (this._MPS2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MPS2.Entity = null;
						previousValue.MPS1 = null;
					}
					this._MPS2.Entity = value;
					if ((value != null))
					{
						value.MPS1 = this;
					}
					this.SendPropertyChanged("MPS2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MPS_MPS", Storage="_MPS1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public MPS MPS1
		{
			get
			{
				return this._MPS1.Entity;
			}
			set
			{
				MPS previousValue = this._MPS1.Entity;
				if (((previousValue != value) 
							|| (this._MPS1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MPS1.Entity = null;
						previousValue.MPS2 = null;
					}
					this._MPS1.Entity = value;
					if ((value != null))
					{
						value.MPS2 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("MPS1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_MPS", Storage="_Part", ThisKey="partnr", OtherKey="partNr", IsForeignKey=true)]
		public Part Part
		{
			get
			{
				return this._Part.Entity;
			}
			set
			{
				Part previousValue = this._Part.Entity;
				if (((previousValue != value) 
							|| (this._Part.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Part.Entity = null;
						previousValue.MPS.Remove(this);
					}
					this._Part.Entity = value;
					if ((value != null))
					{
						value.MPS.Add(this);
						this._partnr = value.partNr;
					}
					else
					{
						this._partnr = default(string);
					}
					this.SendPropertyChanged("Part");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductFinish")]
	public partial class ProductFinish : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _productnr;
		
		private string _partNr;
		
		private int _status;
		
		private System.DateTime _finishTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnproductnrChanging(string value);
    partial void OnproductnrChanged();
    partial void OnpartNrChanging(string value);
    partial void OnpartNrChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnfinishTimeChanging(System.DateTime value);
    partial void OnfinishTimeChanged();
    #endregion
		
		public ProductFinish()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productnr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string productnr
		{
			get
			{
				return this._productnr;
			}
			set
			{
				if ((this._productnr != value))
				{
					this.OnproductnrChanging(value);
					this.SendPropertyChanging();
					this._productnr = value;
					this.SendPropertyChanged("productnr");
					this.OnproductnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partNr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string partNr
		{
			get
			{
				return this._partNr;
			}
			set
			{
				if ((this._partNr != value))
				{
					this.OnpartNrChanging(value);
					this.SendPropertyChanging();
					this._partNr = value;
					this.SendPropertyChanged("partNr");
					this.OnpartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finishTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime finishTime
		{
			get
			{
				return this._finishTime;
			}
			set
			{
				if ((this._finishTime != value))
				{
					this.OnfinishTimeChanging(value);
					this.SendPropertyChanging();
					this._finishTime = value;
					this.SendPropertyChanged("finishTime");
					this.OnfinishTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Part")]
	public partial class Part : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _partNr;
		
		private int _partType;
		
		private string _partDesc;
		
		private int _partStatus;
		
		private System.Nullable<double> _moq;
		
		private System.Nullable<double> _spq;
		
		private EntitySet<MPS> _MPS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpartNrChanging(string value);
    partial void OnpartNrChanged();
    partial void OnpartTypeChanging(int value);
    partial void OnpartTypeChanged();
    partial void OnpartDescChanging(string value);
    partial void OnpartDescChanged();
    partial void OnpartStatusChanging(int value);
    partial void OnpartStatusChanged();
    partial void OnmoqChanging(System.Nullable<double> value);
    partial void OnmoqChanged();
    partial void OnspqChanging(System.Nullable<double> value);
    partial void OnspqChanged();
    #endregion
		
		public Part()
		{
			this._MPS = new EntitySet<MPS>(new Action<MPS>(this.attach_MPS), new Action<MPS>(this.detach_MPS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partNr", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string partNr
		{
			get
			{
				return this._partNr;
			}
			set
			{
				if ((this._partNr != value))
				{
					this.OnpartNrChanging(value);
					this.SendPropertyChanging();
					this._partNr = value;
					this.SendPropertyChanged("partNr");
					this.OnpartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partType", DbType="Int NOT NULL")]
		public int partType
		{
			get
			{
				return this._partType;
			}
			set
			{
				if ((this._partType != value))
				{
					this.OnpartTypeChanging(value);
					this.SendPropertyChanging();
					this._partType = value;
					this.SendPropertyChanged("partType");
					this.OnpartTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partDesc", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string partDesc
		{
			get
			{
				return this._partDesc;
			}
			set
			{
				if ((this._partDesc != value))
				{
					this.OnpartDescChanging(value);
					this.SendPropertyChanging();
					this._partDesc = value;
					this.SendPropertyChanged("partDesc");
					this.OnpartDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partStatus", DbType="Int NOT NULL")]
		public int partStatus
		{
			get
			{
				return this._partStatus;
			}
			set
			{
				if ((this._partStatus != value))
				{
					this.OnpartStatusChanging(value);
					this.SendPropertyChanging();
					this._partStatus = value;
					this.SendPropertyChanged("partStatus");
					this.OnpartStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moq", DbType="Float")]
		public System.Nullable<double> moq
		{
			get
			{
				return this._moq;
			}
			set
			{
				if ((this._moq != value))
				{
					this.OnmoqChanging(value);
					this.SendPropertyChanging();
					this._moq = value;
					this.SendPropertyChanged("moq");
					this.OnmoqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spq", DbType="Float")]
		public System.Nullable<double> spq
		{
			get
			{
				return this._spq;
			}
			set
			{
				if ((this._spq != value))
				{
					this.OnspqChanging(value);
					this.SendPropertyChanging();
					this._spq = value;
					this.SendPropertyChanged("spq");
					this.OnspqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Part_MPS", Storage="_MPS", ThisKey="partNr", OtherKey="partnr")]
		public EntitySet<MPS> MPS
		{
			get
			{
				return this._MPS;
			}
			set
			{
				this._MPS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MPS(MPS entity)
		{
			this.SendPropertyChanging();
			entity.Part = this;
		}
		
		private void detach_MPS(MPS entity)
		{
			this.SendPropertyChanging();
			entity.Part = null;
		}
	}
}
#pragma warning restore 1591
