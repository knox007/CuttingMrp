@using MvcPaging;

@model IPagedList<CuttingMrpLib.ProcessOrder>
@{
    ViewBag.Title = "ProcessOrders";
}

<form action="/ProcessOrders/Search" method="get">
    <div class="panel panel-default navbar-fixed-top" style="box-shadow: -2px 2px 4px #34313a;top:60px;">
        <div class="panel-body">
            <div class="col-sm-12" style="text-align:center;">
                <div class="col-sm-9 filter-content">
                    <span class="pull-right" id="basic-addon-filter"> <i class="glyphicon glyphicon-filter"></i> </span>
                    <div class="filter-p"></div>
                </div>

                <div class="col-sm-1" style="text-align:left;">
                    <button class="btn btn-primary" type="submit">Search All</button>
                </div>


            </div>
        </div>
    </div>
</form>

<table class="table table-bordered" style="margin-top:100px;">
    <thead>
        <tr>
            <th> No. </th>
            <th>OrderNr</th>
            <th>SourceDoc</th>
            <th>DerivedFrom</th>
            <th>ProceeDate</th>
            <th>PartNr</th>
            <th>SourceQuantity</th>
            <th>ActualQuantity</th>
            <th>CompleteRate</th>
            <th>Status</th>
            <th>BatchQuantity</th>
            <th>Options</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            int i = 0;
            foreach (var item in Model)
            {
                <tr>
                    <td>@(i += 1)</td>
                    <td>@Html.DisplayFor(modelItem => item.orderNr)</td>
                    <td>@Html.DisplayFor(modelItem => item.sourceDoc)</td>
                    <td>@Html.DisplayFor(modelItem => item.derivedFrom)</td>
                    <td>@Html.DisplayFor(modelItem => item.proceeDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.partNr)</td>
                    <td>@Html.DisplayFor(modelItem => item.sourceQuantity)</td>
                    <td>@Html.DisplayFor(modelItem => item.actualQuantity)</td>
                    <td>@Html.DisplayFor(modelItem => item.completeRate)</td>
                    <td>@Html.DisplayFor(modelItem => item.statusDisplay)</td>
                    <td>@Html.DisplayFor(modelItem => item.batchQuantity)</td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.orderNr }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.orderNr })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="col-sm-12" style="text-align:center;">
    <div class="clearfix pagination">
        <div class="pagination-inner">
            @if (Model != null)
            {
                if (ViewBag.Query != null)
                {
                    var html = Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount)
                        .Options(o => o.AddRouteValue("OrderNr", ViewBag.Query.OrderNr))
                        .Options(o => o.AddRouteValue("SourceDoc", ViewBag.Query.SourceDoc))
                        .Options(o => o.AddRouteValue("DerivedFrom", ViewBag.Query.DerivedFrom))
                        .Options(o => o.AddRouteValue("ProceeDateFrom", ViewBag.Query.ProceeDateFrom))
                        .Options(o => o.AddRouteValue("ProceeDateTo", ViewBag.Query.ProceeDateTo))
                        .Options(o => o.AddRouteValue("PartNr", ViewBag.Query.PartNr))
                        .Options(o => o.AddRouteValue("ActualQuantityFrom", ViewBag.Query.ActualQuantityFrom))
                        .Options(o => o.AddRouteValue("ActualQuantityTo", ViewBag.Query.ActualQuantityTo))
                        .Options(o => o.AddRouteValue("CompleteRateFrom", ViewBag.Query.CompleteRateFrom))
                        .Options(o => o.AddRouteValue("CompleteRateTo", ViewBag.Query.CompleteRateTo))
                        .Options(o => o.AddRouteValue("Status", ViewBag.Query.Status));
                    @html
                }
                else
                {
                    @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount)
                }
            }
        </div>
    </div>
</div>

<div style="display:none;">
    <div id="extra-filter-content">


        <hr style="margin:10px;" />

        <div class="col-sm-12">
            <div class="col-sm-6" style="margin-left:-15px;">
                <div class="input-group filter-detail">
                    <span class="input-group-addon" id="basic-addon-derivedfrom" style="width:80px;">Status</span>
                    @Html.DropDownList("Status", ViewData["statusList"] as IEnumerable<SelectListItem>)
                </div>
            </div>

        </div>
        <div class="popModal_footer">
            <input type="submit" value="Search" class="btn btn-success FilterSearchBtn" data-dialogModalBut="ok" />
        </div>
    </div>
</div>
