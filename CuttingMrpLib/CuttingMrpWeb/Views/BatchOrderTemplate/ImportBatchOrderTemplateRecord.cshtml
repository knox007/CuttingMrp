
@{
    ViewBag.Title = "ImportBatchOrderTemplateRecord";
}


<div style="text-align:center;" class="container">
    <h1>上传日志</h1>
</div>

<div class="alert alert-warning alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
    <ul class="list-unstyled" style="font-size:1.3em;">
        <li>
            @*1、Check Your Data Quantity*@
            1、请检查你数据的总数量是否正确
        </li>
        <li>
            @*2、Look Error Reason*@
            2、查看错误信息
        </li>
        <li>
            @*3、Copy Error Data and Solve*@
            3、检查错误信息并处理
        </li>
        <li>
            @*4、Import and Check Again*@
            4、检查无误之后重新上传
        </li>
    </ul>
</div>

<blockquote>
    <p class="label label-primary" style="font-size:1.5em;">@ViewBag.NotCsv</p>
    <br />
    <br />
    <br />
    <p class="label label-primary" style="font-size:1.5em;">@ViewBag.NotCheckedData</p>
</blockquote>

@try
{
    <table class="table table-bordered QtyTable">
        <thead>
            <tr style="background:white;">
                <td colspan="9" style="text-align:left;">
                    <span class="label label-success" style="font-size:1.2em;">
                        <i class="glyphicon glyphicon-bullhorn"></i>
                        @*Tips: You Can Check Your Data Here.*@
                        提示：请在下表中检查你所上传的数据
                    </span>
                </td>
            </tr>
            <tr>
                <td>总数量</td>
                <td style="background:green;">【新建】成功</td>
                <td style="background:darkred;">【新建】失败</td>
                <td style="background:green;">【更新】成功</td>
                <td style="background:darkred;">【更新】失败</td>
                <td style="background:green;">【删除】成功</td>
                <td style="background:darkred;">【删除】失败</td>
                <td style="background:orange;">【Action】列为空</td>
                <td style="background:gray;">其他错误</td>
            </tr>
        </thead>

        <tbody>
            <tr>
                @foreach (var qty in ViewData["Qty"] as Dictionary<string, int>)
                {
                    <td id="@qty.Key">
                        @qty.Value
                    </td>
                }
            </tr>
        </tbody>
    </table>
}
catch (Exception)
{
    <input hidden value="9999" class="Qty" />

    @*<h2 style="color:#d9534f;"> Your <code> .Csv </code> File Can't be Imported.Please Checked following tips:</h2>*@
    <h2 style="color:#d9534f;"> 你的 <code> .Csv </code> 文件不能导入，请通过以下步骤进行检查：</h2>
    <br>
    <blockquote>
        <ul class="list-unstyled" style="font-size:1.2em">
            <li>
                <span class="label label-info">
                    @*step 1 :  </span>&emsp; Is the file correct?*@
                    第一步 :
                </span>&emsp; 请检查文件名是否正确?
            </li>

            <li>
                <span class="label label-primary">
                    @*step 2 : </span>&emsp; Are there any useless data? remove all of them.*@
                    第二步 :
                </span>&emsp; 如果存在无用的数据，请先删除，然后再次上传
            </li>

            <li>
                <span class="label label-warning">
                    @*step 3 : </span>&emsp;  Column Name exist Error. Please Notice <code>1</code> and <code> l </code> etc.*@
                    第三步 :
                </span>&emsp;  列名有错误，请注意 <code>1</code> 和 <code> l </code> 之类的区别.
            </li>
        </ul>
    </blockquote>
}

@try
{
    <table class="table table-bordered CreateFailureTable">
        <thead>
            <tr style="background:white;">
                <td colspan="11" style="text-align:left;">
                    <span class="label label-danger" style="font-size:1.2em;">
                        <i class="glyphicon glyphicon-warning-sign"></i>
                        @*Create Msg: Maybe Column 'OrderNr' Already Exist or Column 'PartNr' Doesn't Exist.*@
                        新建信息:'OrderNr'列已经存在，或者'PartNr'列不存在
                    </span>
                </td>
            </tr>
            <tr>
                <td>OrderNr</td>
                <td>PartNr</td>
                <td>BatchQty</td>
                <td>Type</td>
                <td>Bundle</td>
                <td>CreatedAt</td>
                <td>UpdatedAt</td>
                <td>Operator</td>
                <td>Remark1</td>
                <td>Remark2</td>
                <td>Action</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var createErrors in ViewData["createErrorDic"] as List<Dictionary<string, string>>)
            {
                <tr>
                    @foreach (var createError in @createErrors as Dictionary<string, string>)
                    {
                        <td>
                            @createError.Value
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
catch (Exception)
{
    <h4 style="color:brown;">@ViewBag.CreateExpMsg</h4>
}

@try
{
    <table class="table table-bordered UpdateFailureTable">
        <thead>
            <tr style="background:white;">
                <td colspan="11" style="text-align:left;">
                    <span class="label label-danger" style="font-size:1.2em;">
                        <i class="glyphicon glyphicon-warning-sign"></i>
                        @*Update Msg: Maybe Column 'OrderNr' or 'PartNr' Doesn't Exist.*@
                        更新信息： "OrderNr"和"PartNr"不存在
                    </span>
                </td>
            </tr>
            <tr>
                <td>OrderNr</td>
                <td>PartNr</td>
                <td>BatchQty</td>
                <td>Type</td>
                <td>Bundle</td>
                <td>CreatedAt</td>
                <td>UpdatedAt</td>
                <td>Operator</td>
                <td>Remark1</td>
                <td>Remark2</td>
                <td>Action</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var updateErrors in ViewData["updateErrorDic"] as List<Dictionary<string, string>>)
            {
                <tr>
                    @foreach (var updateError in @updateErrors as Dictionary<string, string>)
                    {
                        <td>
                            @updateError.Value
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
catch (Exception)
{
    <h4 style="color:brown;">@ViewBag.UpdateExpMsg</h4>
}


@try
{
    <table class="table table-bordered DeleteFailureTable">
        <thead>
            <tr style="background:white;">
                <td colspan="11" style="text-align:left;">
                    <span class="label label-danger" style="font-size:1.2em;">
                        <i class="glyphicon glyphicon-warning-sign"></i>
                        @*Delete Msg: Maybe Column 'OrderNr' Doesn't Exist.*@
                        删除信息："OrderNr"列不存在
                    </span>
                </td>
            </tr>
            <tr>
                <td>OrderNr</td>
                <td>PartNr</td>
                <td>BatchQty</td>
                <td>Type</td>
                <td>Bundle</td>
                <td>CreatedAt</td>
                <td>UpdatedAt</td>
                <td>Operator</td>
                <td>Remark1</td>
                <td>Remark2</td>
                <td>Action</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var deleteErrors in ViewData["deleteErrorDic"] as List<Dictionary<string, string>>)
            {
                <tr>
                    @foreach (var deleteError in @deleteErrors as Dictionary<string, string>)
                    {
                        <td>
                            @deleteError.Value
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
catch (Exception)
{
}

@try
{
    <table class="table table-bordered ActionNullTable">
        <thead>
            <tr style="background:white;">
                <td colspan="7" style="text-align:left;">
                    <span class="label label-danger" style="font-size:1.2em;">
                        <i class="glyphicon glyphicon-warning-sign"></i>
                        @*Action Null: Column 'Action' is Null.*@
                        [Action]为空：'Action' 列为空，请仔细检查列中是否存在
                    </span>
                </td>
            </tr>
            <tr>
                <td>OrderNr</td>
                <td>PartNr</td>
                <td>BatchQty</td>
                <td>Type</td>
                <td>Bundle</td>
                <td>CreatedAt</td>
                <td>UpdatedAt</td>
                <td>Operator</td>
                <td>Remark1</td>
                <td>Remark2</td>
                <td>Action</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var actionNullErrors in ViewData["actionNullErrorDic"] as List<Dictionary<string, string>>)
            {
                <tr>
                    @foreach (var actionNullError in @actionNullErrors as Dictionary
        <string, string>
            )
                    {
                        <td>
                            @actionNullError.Value
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
catch (Exception)
{
}


@try
{
    <table class="table table-bordered OtherTable">
        <thead>
            <tr style="background:white;">
                <td colspan="7" style="text-align:left;">
                    <span class="label label-danger" style="font-size:1.2em;">
                        <i class="glyphicon glyphicon-warning-sign"></i>
                        @*Other Msg: Maybe Column 'Action' Error.*@
                        其他信息： "Action"列有错误，只能填写'create','update','delete'三个字段
                    </span>
                </td>
            </tr>
            <tr>
                <td>OrderNr</td>
                <td>PartNr</td>
                <td>BatchQty</td>
                <td>Type</td>
                <td>Bundle</td>
                <td>CreatedAt</td>
                <td>UpdatedAt</td>
                <td>Operator</td>
                <td>Remark1</td>
                <td>Remark2</td>
                <td>Action</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var otherErrors in ViewData["otherErrorDic"] as List<Dictionary<string, string>>)
            {
                <tr>
                    @foreach (var otherError in @otherErrors as Dictionary
        <string, string>
            )
                    {
                        <td>
                            @otherError.Value
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
catch (Exception)
{
}

@Scripts.Render("~/bundles/batch-order-template")

<script type="text/javascript">
    BatchOrderTempalte.import_result();
</script>